{"ast":null,"code":"import _slicedToArray from \"/Users/joethaxton/Desktop/chat/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joethaxton/Desktop/chat/my-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Test from './Test';\nimport React, { useEffect, useState } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nconst App = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        established = _useState2[0],\n        setEstablished = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        value = _useState4[0],\n        setValue = _useState4[1];\n\n  const client = new W3CWebSocket('ws://localhost:8999/');\n\n  const _useState5 = useState(Math.random() * 9999999991000000),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentUser = _useState6[0],\n        setCurrentUser = _useState6[1];\n\n  client.onmessage = message => {\n    console.log(message);\n  };\n\n  useEffect(() => {\n    if (!established) {\n      client.onopen = () => {\n        console.log('WebSocket Client Connected');\n      };\n\n      client.onmessage = message => {\n        console.log(message);\n      };\n\n      setEstablished(true);\n    }\n  });\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    client.send(value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/joethaxton/Desktop/chat/my-app/src/App.js"],"names":["Test","React","useEffect","useState","w3cwebsocket","W3CWebSocket","App","established","setEstablished","value","setValue","client","Math","random","currentUser","setCurrentUser","onmessage","message","console","log","onopen","handleChange","e","target","handleSubmit","send"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACwBH,QAAQ,CAAC,KAAD,CADhC;AAAA;AAAA,QACPI,WADO;AAAA,QACMC,cADN;;AAAA,qBAEYL,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,QAEPM,KAFO;AAAA,QAEAC,QAFA;;AAGd,QAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB,sBAAjB,CAAf;;AAHc,qBAIwBF,QAAQ,CAACS,IAAI,CAACC,MAAL,KAAiB,gBAAlB,CAJhC;AAAA;AAAA,QAIPC,WAJO;AAAA,QAIMC,cAJN;;AAKdJ,EAAAA,MAAM,CAACK,SAAP,GAAoBC,OAAD,IAAa;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,GAFD;;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,WAAL,EAAkB;AAChBI,MAAAA,MAAM,CAACS,MAAP,GAAgB,MAAM;AACpBF,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,OAFD;;AAGAR,MAAAA,MAAM,CAACK,SAAP,GAAoBC,OAAD,IAAa;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,OAFD;;AAGAT,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAVQ,CAAT;;AAYA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AAC1BZ,IAAAA,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASd,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMe,YAAY,GAAIF,CAAD,IAAO;AAC1BX,IAAAA,MAAM,CAACc,IAAP,CAAYhB,KAAZ;AACD,GAFD;;AAIA,SACE,0CACE;AAAO,IAAA,QAAQ,EAAEa,CAAC,IAAID,YAAY,CAACC,CAAD,CAAlC;AAAuC,IAAA,KAAK,EAAEb,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEe,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMH,CAlCD;;AAoCA,eAAelB,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Test from './Test'\nimport React, { useEffect, useState } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nconst App = () => {\n    const [established, setEstablished] = useState(false)\n    const [value, setValue] = useState(\"\");\n    const client = new W3CWebSocket('ws://localhost:8999/');\n    const [currentUser, setCurrentUser] = useState(Math.random() * (9999999991000000))\n    client.onmessage = (message) => {\n      console.log(message);\n    };\n    useEffect(() => {\n      if (!established) {\n        client.onopen = () => {\n          console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (message) => {\n          console.log(message);\n        };\n        setEstablished(true);\n      }\n    })\n  \n    const handleChange = (e) => {\n      setValue(e.target.value)\n    }\n  \n    const handleSubmit = (e) => {\n      client.send(value)\n    }\n  \n    return (\n      <>\n        <input onChange={e => handleChange(e)} value={value}></input>\n        <button onClick={handleSubmit}>Submit</button>\n      </>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}