{"ast":null,"code":"import _slicedToArray from \"/Users/joethaxton/Desktop/chat/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"/Users/joethaxton/Desktop/chat/my-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/joethaxton/Desktop/chat/my-app/src/Test.js\";\n// import logo from './logo.svg';\n// import './Test.css';\n// import Test from './Test'\nimport React, { useEffect, useState } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nconst Test = (_ref) => {\n  let props = _extends({}, _ref);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        established = _useState2[0],\n        setEstablished = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        payload = _useState4[0],\n        setPayload = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        text = _useState6[0],\n        setText = _useState6[1];\n\n  const _useState7 = useState(\"user_\".concat(Math.random() * (999999999 - 1000000))),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentUser = _useState8[0],\n        setCurrentUser = _useState8[1];\n\n  useEffect(() => {\n    if (props.client) {\n      props.client.onmessage = message => {\n        console.log(message);\n        setPayload([...payload, {\n          user: message.user,\n          text: message.text\n        }]);\n      };\n    }\n  });\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    props.client.send(JSON.stringify({\n      text: text,\n      user: currentUser\n    }));\n    setText(\"\");\n  };\n\n  return React.createElement(React.Fragment, null, payload && payload.map(item => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, item.text)), React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    value: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/joethaxton/Desktop/chat/my-app/src/Test.js"],"names":["React","useEffect","useState","w3cwebsocket","W3CWebSocket","Test","props","established","setEstablished","payload","setPayload","text","setText","Math","random","currentUser","setCurrentUser","client","onmessage","message","console","log","user","handleChange","e","target","value","handleSubmit","send","JSON","stringify","map","item"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;;AAEA,MAAMC,IAAI,GAAG,UAAgB;AAAA,MAAXC,KAAW;;AAAA,oBACaJ,QAAQ,CAAC,KAAD,CADrB;AAAA;AAAA,QAClBK,WADkB;AAAA,QACLC,cADK;;AAAA,qBAEKN,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAElBO,OAFkB;AAAA,QAETC,UAFS;;AAAA,qBAGDR,QAAQ,CAAC,EAAD,CAHP;AAAA;AAAA,QAGlBS,IAHkB;AAAA,QAGZC,OAHY;;AAAA,qBAIaV,QAAQ,gBAASW,IAAI,CAACC,MAAL,MAAiB,YAAY,OAA7B,CAAT,EAJrB;AAAA;AAAA,QAIlBC,WAJkB;AAAA,QAILC,cAJK;;AAKzBf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACW,MAAV,EAAkB;AAChBX,MAAAA,KAAK,CAACW,MAAN,CAAaC,SAAb,GAA0BC,OAAD,IAAa;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAT,QAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa;AAACa,UAAAA,IAAI,EAAEH,OAAO,CAACG,IAAf;AAAqBX,UAAAA,IAAI,EAAEQ,OAAO,CAACR;AAAnC,SAAb,CAAD,CAAV;AACD,OAHD;AAID;AACF,GAPQ,CAAT;;AASA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BZ,IAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BlB,IAAAA,KAAK,CAACW,MAAN,CAAaW,IAAb,CAAkBC,IAAI,CAACC,SAAL,CAAe;AAACnB,MAAAA,IAAI,EAAEA,IAAP;AAAaW,MAAAA,IAAI,EAAEP;AAAnB,KAAf,CAAlB;AACAH,IAAAA,OAAO,CAAC,EAAD,CAAP;AAED,GAJD;;AAMA,SACE,0CACGH,OAAO,IAAIA,OAAO,CAACsB,GAAR,CAAYC,IAAI,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGA,IAAI,CAACrB,IAFR,CADU,CADd,EAOE;AAAO,IAAA,QAAQ,EAAEa,CAAC,IAAID,YAAY,CAACC,CAAD,CAAlC;AAAuC,IAAA,KAAK,EAAEb,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAQ,IAAA,OAAO,EAAEgB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF;AAYH,CApCD;;AAsCA,eAAetB,IAAf","sourcesContent":["// import logo from './logo.svg';\n// import './Test.css';\n// import Test from './Test'\nimport React, { useEffect, useState } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nconst Test = ({...props}) => {\n    const [established, setEstablished] = useState(false)\n    const [payload, setPayload] = useState([]);\n    const [text, setText] = useState(\"\");\n    const [currentUser, setCurrentUser] = useState(`user_${Math.random() * (999999999 - 1000000)}`)\n    useEffect(() => {\n      if (props.client) {\n        props.client.onmessage = (message) => {\n          console.log(message)\n          setPayload([...payload, {user: message.user, text: message.text}])\n        };\n      }\n    })\n  \n    const handleChange = (e) => {\n      setText(e.target.value)\n    }\n  \n    const handleSubmit = (e) => {\n      props.client.send(JSON.stringify({text: text, user: currentUser}))\n      setText(\"\")\n\n    }\n  \n    return (\n      <>\n        {payload && payload.map(item => (\n          <div>\n            {/* {item.user} */}\n            {item.text}\n          </div>\n        ))}\n        <input onChange={e => handleChange(e)} value={text}></input>\n        <button onClick={handleSubmit}>Submit</button>\n      </>\n    )\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}